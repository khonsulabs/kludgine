searchState.loadedDescShard("kludgine", 0, "Kludgine\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nA type that can be any <code>TextureSource</code> implementation that …\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nA resource that can be checked for surface compatibility.\nThe grapihc should be drawn so that the center of the …\nA clipped surface.\nA graphics context that has been clipped.\nA <code>CollectedTexture</code>.\nA texture that is contained within a <code>TextureCollection</code>.\nA red, green, blue, and alpha color value stored in …\nThe graphic should be drawn so that the provided relative …\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nA drawable source with optional translation, rotation, and …\nTranslation, rotation, and scaling for drawable types.\nA type that can be drawn in Kludgine.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nA frame that can be rendered.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nA context used to prepare graphics to render.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nA 2d graphics instance.\nA generic graphics context.\nThe unique ID of a <code>Kludgine</code> instance.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nA lazy texture that loads its contents on first use.\nA <code>LazyTexture</code>.\nA <code>TextureSource</code> that loads its data lazily.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nThe origin of a prepared graphic.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nA graphic that is on the GPU and ready to render.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nThe features that wgpu requires in compatible devices.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nA <code>TextureRegion</code>.\nA graphics context used to render previously prepared …\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nA unit that is able to be scaled by the GPU shader.\nA source of triangle data for a shape.\nA texture that can be cloned cheaply.\nA shared texture instance.\nA <code>SharedTexture</code>.\nA cloneable texture.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nAn image stored on the GPU.\nA <code>Texture</code>.\nA collection of multiple textures, managed as a single …\nA region of a <code>SharedTexture</code>.\nA type that is rendered using a texture.\nThe graphic should be drawn so that the top-left of the …\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nEquivalent to the CSS color keywords of the same name.\nAborts rendering this frame.\nAdjusts and returns the wgpu limits to support features …\nReturns the alpha component of this color, range 0-255. A …\nReturns the alpha component of this color, range 0.0-1.0. …\nApplication and Windowing Support.\nReturns the blue component of this color, range 0-255.\nReturns the blue component of this color, range 0.0-1.0.\nReturns <code>true</code> if this resource can be rendered into a …\nReturns the current rectangular area of the context.\nReturns a <code>ClipGuard</code> that causes all drawing operations to …\nReturns a <code>ClipGuard</code> that causes all drawing operations to …\nCopies the contents of a portion of this texture into …\nCopies the contents of this texture into <code>destination</code>.\nReturns a reference to the underlying <code>wgpu::Device</code>.\nReturns a reference to the underlying <code>wgpu::Device</code>.\nReturns the DPI scale of the underlying context.\nAn easy-to-use batching renderer.\nReturns the current font family.\nReturns the current font size.\nReturns the current font style.\nReturns a mutable reference to the <code>cosmic_text::FontSystem</code> …\nReturns a mutable reference to the <code>cosmic_text::FontSystem</code> …\nReturns the current font weight.\nReturns the format of the texture backing this collection.\nThe format of the texture.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new texture that loads its data to the gpu once …\nReturns a texture that loads <code>image</code> into the gpu when it is …\nCreates a texture from <code>image</code>.\nReturns the green component of this color, range 0-255.\nReturns the green component of this color, range 0.0-1.0.\nReturns the unique id of this instance.\nIncludes an Aseprite sprite sheet and Json export. For …\nLoads a texture’s bytes into the executable. This macro …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the current line height.\nCreates a new texture of the given multisample count, …\nReturns a new atlas of the given size and format.\nReturns a new instance of Kludgine with the provided …\nReturns a new instance.\nReturns a new color with the provided components.\nCreates a new texture of the given size, format, and …\nReturns a reference to this texture that only renders a …\nReturns a new color by converting each component from its …\nReturns a new texture of the given size, format, and …\nBegins rendering a new frame.\nRenders this drawable with <code>opacity</code>, ranged from 0.- to 1.0.\nAn opacity multiplier to apply to this drawable.\nRestores the clipping rect to the previous state before …\nCreates a <code>Graphics</code> context for this frame that can be used …\nReturns a <code>PreparedGraphic</code> that renders this texture at <code>dest</code>…\nPrepares to render this texture at the given location.\nPrepares to render this texture at the given location.\nReturns a <code>PreparedGraphic</code> for the entire texture.\nPrepares the <code>source</code> area to be rendered at <code>dest</code>.\nPrepares to render this texture with <code>size</code>. The returned …\nPrepares the text layout contained in <code>buffer</code> to be …\nPushes a new clipping state to the clipping stack.\nPushes an image to this collection.\nPushes image data to a specific region of the texture.\nReturns a reference to the underlying <code>wgpu::Queue</code>.\nReturns a reference to the underlying <code>wgpu::Queue</code>.\nRebuilds the font system, invalidating font database …\nReturns the red component of this color, range 0-255.\nReturns the red component of this color, range 0.0-1.0.\nCreates a <code>RenderingGraphics</code> context for this frame which …\nRenders this prepared graphic into <code>graphics</code> using the …\nRenders the prepared graphic at <code>origin</code>, rotating and …\nCreates a <code>RenderingGraphics</code> that renders into <code>texture</code> for …\nResets all of the text related properties to their default …\nUpdates the size and scale of this Kludgine instance.\nRotates <code>self</code> by <code>angle</code>.\nRotate the source before rendering.\nScales <code>self</code> by <code>factor</code>.\nReturns the current scaling factor of the display being …\nReturns the effective scale to apply to graphics contexts.\nScale the source before rendering.\nSets the current DPI scale.\nSets the current font family.\nSets the font size.\nSets the current font style.\nSets the current font weight.\nSets the line height for multi-line layout.\nSets the current text attributes.\nSets the current text stretching.\nSets the current zoom level.\nSets the zoom level.\nTypes for drawing paths and shapes.\nReturns the current size of the graphics area being …\nReturns the current size of the underlying texture.\nReturns the currently configured size to render.\nReturns the current clipped size of the context.\nThe size of the texture.\nThe size of the texture.\nThe size of the texture.\nReturns the size of the region being drawn.\nReturns the size of the texture.\nThe source to draw.\nTypes for animating textures.\nSubmits all of the commands for this frame to the GPU.\nTypes for text rendering.\nReturns the current text attributes.\nReturns the current text stretch.\nReturns the <code>SharedTexture</code> from this instance, loading it if\nTranslates <code>self</code> by <code>point</code>.\nTranslate the source before rendering.\nLoads this texture to <code>graphics</code>, if needed, returning a …\nReturns a view over the entire texture.\nReturns the underlying wgpu handle.\nReturns a new color replacing this colors alpha channel …\nReturns a new color replacing this colors alpha channel …\nReturns a new color replacing this colors blue channel …\nReturns a new color replacing this colors blue channel …\nReturns a new color replacing this colors green channel …\nReturns a new color replacing this colors green channel …\nReturns a new color replacing this colors red channel with …\nReturns a new color replacing this colors red channel with …\nReturns the current zoom applied.\nA handle to a running Kludgine application.\nA Kludgine application event.\nA response to an <code>AppEvent</code>.\nA type that has a handle to the application thread.\nA type that contains a reference to an <code>Application</code> …\nThe type of value provided during <code>initialize()</code>.\nA reference to an executing application and its event loop.\nA message with an associated response type.\nInformation about a monitor connected to a device.\nA snapshot of information about monitors (displays) …\nA <code>Kludgine</code> application that enables opening multiple …\nThe window was resized whlie preparing to render.\nThe type returned when responding to this message.\nA guard preventing an <code>App</code> from shutting down.\nA specific video mode for a <code>Monitor</code>.\nAn open window.\nThe message type that is able to be sent to individual …\nAttributes of a desktop window.\nThe behavior of a window.\nA handle to a window.\nWhether the window is active or not.\nReturns a handle to the running application.\nReturns a handle to the application.\nName of the application\nReturns a handle to the application that will be run.\nReturns this type’s application.\nReturns this type’s application.\nAll available monitors.\nReturns the list of available monitors.\nA multi-axis input device has registered motion.\nReturns the color bit depth of this video mode.\nReturns the color to clear the window with. If None is …\nCloses this window as soon as control returns to <code>Kludgine</code>.\nThe window has been requested to be closed. This can …\nReturns the composite alpha mode to use for rendering the …\nIf true, the contents of the window will be prevented from …\nA cursor has hovered over the window.\nA cursor is no longer hovering over the window.\nA cursor has moved over the window.\nReturns the position of the mouse cursor within this …\nControls the visibility of the window decorations.\nWhen true, this window will delay honoring the <code>visible</code> …\nA double-tap gesture directed at the window.\nA file has been dropped on the window.\nReturns the duration that has elapsed since the last frame …\nThe collection of window buttons that are enabled.\nA <code>WindowEvent</code> has been received by this window.\nThe window has gained or lost keyboard focus. …\nReturns true if the window is currently focused for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe full screen configuration for the window.\nReturns a handle to this window, which can be used to send …\nReturns a reference to the underlying handle.\nReturns a reference to the underlying handle.\nA file is hovering over the window.\nA file being overed has been cancelled.\nAn international input even thas occurred for the window.\nReturns the window attributes to use when creating the …\nInitialize a new instance from the provided context.\nExecuted once after the window has been fully initialized.\nReturns the current inner position of the window.\nReturns the inner size of the window.\nThe inner size of the window.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the given virtual key code is currently …\nA keyboard event occurred while the window was focused.\nReturns the duration taken between when the last frame’s …\nReturns the limits to apply for the <code>wgpu</code> instance.\nThe maximum inner size of the window.\nThe maximized state of the window.\nReturns the memory hints to initialize <code>wgpu</code> with.\nThe minimum inner size of the window.\nReturns currently active modifiers.\nThe keyboard modifier keys have changed. …\nReturns the monitor associated with this video mode.\nReturns a snapshot of information about the monitors on …\nReturns true if the given button is currently pressed.\nA mouse button was pressed or released.\nAn event from a mouse wheel.\nThe window has been moved. [<code>Window::position()</code>] returns …\nReturns the number of multisamples to perform when …\nReturns the name of the monitor, if available.\nCreates a new Kludgine application.\nReturns true if the window is currenly not visible because …\nThe window has been occluded or revealed. …\nExecutes <code>on_startup</code> once the app event loop has started.\nOpens a new window with a default instance of this behavior…\nOpens a new window with the provided <code>Context</code>. The events …\nReturns the current outer position of the window.\nReturns the size of the window, including decorations.\nReturns a handle to the underlying display.\nA pan/scroll gesture.\nA pinch-to-zoom gesture.\nReturns the position of the top-left corner of the monitor.\nThe position of the top-left of the frame of the window.\nReturns the power preference to initialize <code>wgpu</code> with.\nInvoked before wgpu is initialized for this window.\nThe window’s preferred theme.\nPrepare the window to render.\nReturns the swap chain present mode to use for this window.\nCreates a guard that prevents this app from shutting down.\nThe primary monitor.\nReturns a handle to the primary monitor.\nAn input event has generated a character.\nSets the window to redraw at the provided time.\nSets the window to redraw after a <code>duration</code>.\nReturns the refresh rate of this display, in millihertz.\nReturns the refresh rate of this video mode.\nReturns a rectangle representing the position and size of …\nRender the contents of the window.\nSets the inner size of the window.\nIf true, the window can be resized by the user.\nThe increments in which the window will be allowed to …\nThe window has been resized. <code>Window::inner_size()</code> returns …\nRuns a callback as a single window. Continues to run until …\nBegins running the application.\nLaunches a Kludgine app using this window as the primary …\nLaunches a Kludgine app using this window as the primary …\nReturns the current DPI scale of the window.\nReturns the DPI scaling factor applied to this monitor.\nThe window’s scale factor has changed. <code>Window::scale()</code> …\nSends an app message to the main event loop to be handled …\nSends <code>message</code> to the window. If the message cannot be\nSets whether IME input is allowed on the window.\nSets the cursor area for IME input suggestions.\nSets the IME purpose.\nSets the window’s maximum inner size.\nSets the window’s minimum inner size.\nSets the window to redraw as soon as it can.\nSets the current outer position of the window.\nSets the title of the window.\nReturns the size of this monitor.\nReturns the size the monitor will display at with this …\nReturns the current user interface theme for the window.\nThe window’s theme has been updated. <code>Window::theme()</code> …\nReturns the current title of the window.\nThe title of the window.\nA touch event.\nA pressure-sensitive touchpad was touched.\nA touchpad-originated rotation gesture.\nIf true, the window’s chrome will be hidden and only …\nReturns an iterator of the video modes supported by this …\nThe visibility state of the window.\nThe window’s icon.\nThe level of the window.\nReturns a reference to the underlying winit window.\nA composite, multi-operation graphic, created with an …\nA <code>DrawingBackend</code>\nAn easy-to-use graphics renderer that batches operations …\nReturns this renderer as a <code>DrawingArea</code> compatible with the …\nReturns a <code>ClipGuard</code> that causes all drawing operations to …\nReturns the number of drawing operations that will be sent …\nPrepares the text layout contained in <code>buffer</code> to be …\nDraws a shape at the origin, rotating and scaling as …\nDraws <code>text</code> using the current text settings.\nPrepares the text layout contained in <code>buffer</code> to be …\nDraws <code>texture</code> at <code>destination</code>, scaling as necessary.\nDraws <code>texture</code> at <code>destination</code>.\nDraws a shape that was created with texture coordinates, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMeasures <code>text</code> using the current text settings.\nMeasures <code>buffer</code> and caches the results using <code>default_color</code> …\nClears the currently prepared graphics and returns a new …\nRenders the prepared graphics from the last frame.\nReturns the number of triangles that are being rendered in …\nReturns the number of vertexes that compose the drawing …\nBegins a path. Must be at the start.\nA beveled corner is to be used to join path segments. The …\nThe stroke for each sub-path does not extend beyond its …\nA control point used to create curves.\nA description of the size to use for each corner radius …\nA cubic curve (two control points).\nDefault Fill rule.\nDefault orientation.\nDefault flattening tolerance.\nControls the default stroke width for a given unit.\nEnds the path. Must be the last entry.\nA point on a <code>Path</code>.\nParameters for the fill tessellator.\nA straight line segment.\nLine cap as defined by the SVG specification.\nLine join as defined by the SVG specification.\nA sharp corner is to be used to join path segments.\nSame as a miter join, but if the miter limit is exceeded, …\nVertical or Horizontal.\nA geometric shape defined by a path.\nBuilds a <code>Path</code>.\nAn entry in a <code>Path</code>.\nA quadratic curve (one control point).\nAt each end of each sub-path, the shape representing the …\nA round corner is to be used to join path segments.\nA tesselated shape.\nAt the end of each sub-path, the shape representing the …\nOptions for stroking lines on a path.\nAdd a clockwise arc starting at the current location.\nAdd a clockwise arc starting at the current location.\nReturns a path forming an arc starting at <code>start</code> angle of …\nAdd a counter-clockwise arc starting at the current …\nAdd a counter-clockwise arc starting at the current …\nThe radius of the bottom left rounded corner.\nThe radius of the bottom right rounded corner.\nReturns the built path.\nReturns this set of radii clamped so that no corner radius …\nCloses the path, connecting the current location to the …\nReturns the default options with the line width specified …\nThe color to associate with this endpoint.\nThe color to apply to the stroke.\nSets the color of this stroke and returns self.\nCreate a cubic curve from the current location to <code>end_at</code> …\nCreate a cubic curve from the current location to <code>end_at</code> …\nReturns the default width of a line stroked in this unit.\nSets the line cap style for the end of line segments and …\nWhat cap to use at the end of each sub-path.\nFills this path with <code>color</code>.\nFills this path with <code>color</code> using the provided options.\nSet the fill rule.\nFills this path with solid white.\nReturns a circle that is filled solid with <code>color</code>.\nReturns a rectangle that is filled solid with <code>color</code>.\nReturns a rounded rectangle with the specified corner …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA fast path to avoid some expensive operations if the path …\nReturns the default options with the line width specified …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the line join style and returns self.\nSee the SVG specification.\nCreate a straight line from the current location to <code>end_at</code>.\nCreate a straight line from the current location to <code>end_at</code>.\nThe width of the line.\nThe location of the endpoint on a path.\nReturns the default options with a line width of <code>lp</code>.\nPasses each radius definition to <code>map</code> and returns a new set …\nSets the miter limit and returns self.\nSee the SVG specification.\nReturns the default options with the line width specified …\nCreates a new path with the initial position <code>start_at</code>.\nReturns a new endpoint with a given location and color.\nCreates a new path with the initial position <code>start_at</code>.\nReturns the default options with the line width specified …\nUploads the shape to the GPU, applying <code>texture</code> to the …\nUploads the shape to the GPU.\nReturns the default options with a line width of <code>px</code>.\nCreate a quadratic curve from the current location to …\nCreate a quadratic curve from the current location to …\nClears this builder to a state as if it had just been …\nClears this builder to a state as if it had just been …\nReturns a path for a rounded rectangle with the given …\nSets the line cap style for the start of line segments and …\nWhat cap to use at the start of each sub-path.\nStrokes this path with <code>color</code> and <code>options</code>.\nReturns a circle that is stroked with <code>color</code> and <code>options</code>.\nReturns a rectangle that has its outline stroked with <code>color</code>…\nReturns a rounded rectangle with the specified corner …\nWhether to perform a vertical or horizontal traversal of …\nMaximum allowed distance to the path when building an …\nMaximum allowed distance to the path when building an …\nThe radius of the top left rounded corner.\nThe radius of the top right rounded corner.\nReturns the default options with a line width of <code>px</code>.\nThe x-axis component.\nThe y-axis component\nThe location to begin at.\nWhether the path should be closed.\nThe control point for the curve.\nThe first control point for the curve.\nThe second control point for the curve.\nThe texture coordinate for this path event.\nThe texture coordinate for this path event.\nThe texture coordinate for this path event.\nThe texture coordinate for this path event.\nThe end location of the line.\nThe end location of the curve.\nThe end location of the curve.\nThe animation mode of the sprite.\nThe sprite’s source is a <code>CollectedTexture</code>.\nThe direction field is missing.\nThe direction is not a recognized value.\nThe duration is invalid or missing.\nIterate frames in order. When at the end, reset to the …\nAn error occurred parsing a frame.\nAn error parsing a single frame in a sprite animation.\nAn error parsing a frame tag (animation).\nAn error parsing a <code>frameTags</code> entry.\nThe from field is missing or invalid.\nThe <code>frame.h</code> value is missing or invalid.\nAn image parsing error.\nThe frame could not be found.\nA <code>Sprite</code>’s tag did not correspond to an animation.\nInvalid JSON.\nThe <code>meta</code> field is missing or invalid.\nThe data is missing the <code>frame</code> field, which contains the …\nThe frame number was not able to be parsed as a number.\nIterate frames starting at the beginning and continuously …\nThe sprite’s source is a <code>TextureRegion</code>.\nIterate frames in reverse order. When at the start, reset …\nThe size does not match the provided texture.\nThe size information is missing.\nA sprite is a renderable graphic with optional animations.\nAn animation of one or more <code>SpriteFrame</code>s.\nA collection of <code>SpriteAnimation</code>s. This is an immutable …\nA collection of sprites.\nA single frame for a <code>SpriteAnimation</code>.\nA collection of <code>SpriteSource</code>s.\nAn error occurred parsing a <code>Sprite</code>.\nA collection of sprites from a single <code>ShareableTexture</code>.\nA region of a texture that is used as frame in a sprite …\nThe to field is missing or invalid.\nThe <code>frame.w</code> value is missing or invalid.\nThe <code>frame.x</code> value is missing or invalid.\nThe <code>frame.y</code> value is missing or invalid.\nAdds a collection from <code>sheet</code> using <code>converter</code> to convert …\nAdds all sprites from <code>sheet</code>.\nReturns the animation for <code>tag</code>.\nThe animations that form this sprite.\nRetrieve the current animation frame, if set and valid.\nReturns the current tag.\nThe length the frame should be displayed. <code>None</code> will act as …\nThe frames of the animation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a collection from <code>sheet</code> using <code>converter</code> to convert …\nGets the current frame after advancing the animation for …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads Aseprite JSON export format, when using the correct …\nFor merging multiple Sprites that have no tags within them\nThe mode of the animation.\nReturns a new sprite with <code>animations</code>.\nCreates a new collection from <code>animations</code>.\nCreates a new animation with <code>frames</code> and …\nCreates a new frame with <code>source</code> and no duration.\nCreates a new sprite sheet, diving <code>texture</code> into a grid of …\nCreates a new collection with <code>sprites</code>.\nReturns a <code>PreparedGraphic</code> that renders this texture at <code>dest</code>…\nReturns the amount of time remaining until the next frame …\nSets the current tag for the animation. If the tag …\nCreates an instance from a texture. This creates a …\nThe source to render.\nReturns the sprite referred to by <code>tile</code>.\nReturns the sprites identified by each element in <code>iterator</code> …\nReturns all of the requested <code>tiles</code>.\nReturns the sprites identified by each element in <code>iterator</code>.\nThe source texture.\nReturns the size of the tiles within this sheet.\nReturns a collection of all tiles in the sheet  as\nBuilder-style function. Sets <code>duration</code> and returns self.\nBuilder-style function. Sets <code>mode</code> and returns self.\nThe error that occurred.\nThe error that occurred.\nThe object key for the frame.\nThe name of the frame tag.\nRender the text such that the center of the extents of the …\nRender the text such that the text is offset by a custom …\nRender the text such that the leftmost pixel of the …\nInformation about a glyph in a <code>MeasuredText</code>.\nInstructions for drawing a laid out glyph.\nThe dimensions of a measured text block.\nText that is ready to be rendered on the GPU.\nA text drawing command.\nControls the origin of <code>PreparedText</code>.\nRender the text such that the top-left of the first line …\nThe measurement above the baseline of the text.\nThe color to draw the text using.\nThe measurement below the baseline of the text.\nEnd index of cluster in original line\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe individual glyhs that were laid out.\nInformation about what glyph this is.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe measurement to the leftmost pixel of the text.\nUnicode <code>BiDi</code> embedding level, character is left-to-right …\nThe line index this glyph is visually laid out on.\nThe measurement above the baseline of the text.\nThe width of the line this glyph is on.\nCustom metadata set in <code>cosmic_text::Attrs</code>.\nReturns a text command that draws <code>text</code> with <code>color</code>.\nSets the origin for the text drawing operation and returns …\nThe origin to draw the text around.\nReturns the destination rectangle for this glyph.\nThe total size of the measured text, encompassing all …\nStart index of cluster in original line\nThe text to be drawn.\nReturns true if this measurement is for a visible glyph, …\nSets the width to wrap text at and returns self.\nThe width to wrap the text at. If <code>None</code>, no wrapping is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")