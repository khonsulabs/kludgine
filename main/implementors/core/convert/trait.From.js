(function() {var implementors = {
"kludgine":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kludgine/struct.Texture.html\" title=\"struct kludgine::Texture\">Texture</a>&gt; for <a class=\"enum\" href=\"kludgine/enum.AnyTexture.html\" title=\"enum kludgine::AnyTexture\">AnyTexture</a>"],["impl&lt;Unit&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kludgine/shapes/struct.StrokeOptions.html\" title=\"struct kludgine::shapes::StrokeOptions\">StrokeOptions</a>&lt;Unit&gt;&gt; for StrokeOptions<span class=\"where fmt-newline\">where\n    Unit: FloatConversion&lt;Float = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.73.0/std/primitive.f32.html\">f32</a>&gt;,</span>"],["impl&lt;Unit, const TEXTURED: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.73.0/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kludgine/shapes/struct.Path.html\" title=\"struct kludgine::shapes::Path\">Path</a>&lt;Unit, TEXTURED&gt;&gt; for <a class=\"struct\" href=\"kludgine/shapes/struct.PathBuilder.html\" title=\"struct kludgine::shapes::PathBuilder\">PathBuilder</a>&lt;Unit, TEXTURED&gt;<span class=\"where fmt-newline\">where\n    Unit: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</span>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Color&gt; for <a class=\"struct\" href=\"kludgine/struct.Color.html\" title=\"struct kludgine::Color\">Color</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kludgine/struct.Color.html\" title=\"struct kludgine::Color\">Color</a>&gt; for Color"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;LayoutGlyph&gt; for <a class=\"struct\" href=\"kludgine/text/struct.GlyphInfo.html\" title=\"struct kludgine::text::GlyphInfo\">GlyphInfo</a>"],["impl&lt;'a, Unit&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"https://doc.rust-lang.org/1.73.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"kludgine/text/struct.Text.html\" title=\"struct kludgine::text::Text\">Text</a>&lt;'a, Unit&gt;"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kludgine/struct.Color.html\" title=\"struct kludgine::Color\">Color</a>&gt; for Color"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"kludgine/struct.Texture.html\" title=\"struct kludgine::Texture\">Texture</a>&gt; for <a class=\"struct\" href=\"kludgine/struct.SharedTexture.html\" title=\"struct kludgine::SharedTexture\">SharedTexture</a>"],["impl&lt;'a, Unit&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.73.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"kludgine/text/struct.Text.html\" title=\"struct kludgine::text::Text\">Text</a>&lt;'a, Unit&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()