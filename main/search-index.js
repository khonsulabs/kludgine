var searchIndex = JSON.parse('{\
"kludgine":{"doc":"Kludgine (Redux)","t":"SSSSSESSSSSSSSSSSSSSSSSSNDINDDNSSSSSSSSSSSSSSSSSSSSSSSSDIISSSSDSSSSSSSSDSSSSSSDISSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSESSSSSSSSSSSDSSSSNDSSSSSSSSSSSSSSIINDSSSSSDNDDINSSSSSSLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLKLLLLLLLLLALLLLLLKLMKLLLMLLLLLLLALLLLLLLMALALLALLLLLLKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLQIQDQDIDMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLMLLLLLLLLLLMLLLLLKLMLLLLLLLLLLLLLLLMMMLLLLLLLLLMLMLLLLKMMLFLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLMMMCLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNGDNINDNEENNDDENNNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLKLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMENNNNNNENENNNNDNNNNNNNNNDDDIDDEDENNNNLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMKLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMNNNDDDDDENLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNDIDIINDDDNNRNDEIEDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLLLLLMLLKMLKKKLLLLLLLMLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMM","n":["ALICEBLUE","ANTIQUEWHITE","AQUA","AQUAMARINE","AZURE","AnyTexture","BEIGE","BISQUE","BLACK","BLANCHEDALMOND","BLUE","BLUEVIOLET","BROWN","BURLYWOOD","CADETBLUE","CHARTREUSE","CHOCOLATE","CLEAR_BLACK","CLEAR_WHITE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","Center","ClipGuard","Clipped","Collected","CollectedTexture","Color","Custom","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREEN","DARKGREY","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","Drawable","DrawableExt","DrawableSource","FIREBRICK","FLORALWHITE","FORESTGREEN","FUCHSIA","Frame","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GRAY","GREEN","GREENYELLOW","GREY","Graphics","HONEYDEW","HOTPINK","INDIANRED","INDIGO","IVORY","KHAKI","Kludgine","KludgineGraphics","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREEN","LIGHTGREY","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIME","LIMEGREEN","LINEN","MAGENTA","MAROON","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","NAVAJOWHITE","NAVY","OLDLACE","OLIVE","OLIVEDRAB","ORANGE","ORANGERED","ORCHID","Origin","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","PURPLE","PreparedGraphic","REBECCAPURPLE","RED","ROSYBROWN","ROYALBLUE","Region","RenderingGraphics","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SILVER","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","STEELBLUE","ShaderScalable","ShapeSource","Shared","SharedTexture","TAN","TEAL","THISTLE","TOMATO","TURQUOISE","Texture","Texture","TextureCollection","TextureRegion","TextureSource","TopLeft","VIOLET","WHEAT","WHITE","WHITESMOKE","YELLOW","YELLOWGREEN","abort","alpha","alpha_f32","app","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","blue","blue_f32","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","clip_rect","clipped_to","clipped_to","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cosmic_text","default","deref","deref","deref","deref_mut","deref_mut","device","device","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","figures","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_family","font_size","font_style","font_system","font_system","font_weight","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_image","green","green_f32","hash","image","include_aseprite_sprite","include_texture","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_components","into_components","is_valid_bit_pattern","lazy_from_data","lazy_from_image","line_height","new","new","new","new","new","new_f32","new_with_data","next_frame","opacity","pop_clip","pop_clip","pop_clip","prepare","prepare","prepare","prepare","prepare_entire_colection","prepare_partial","prepare_sized","prepare_text","push_clip","push_clip","push_clip","push_image","push_texture","queue","queue","red","red_f32","region","render","render","render","render","render_into","reset_text_attributes","resize","rotate_by","rotate_by","rotation","scale","scale","scale","scale","scale","set_font_family","set_font_size","set_font_style","set_font_weight","set_line_height","set_text_attributes","set_text_stretch","shapes","size","size","size","size","size","size","size","source","sprite","submit","text","text_attrs","text_stretch","tilemap","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","translate_by","translate_by","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","wgpu","with_alpha","with_alpha_f32","with_blue","with_blue_f32","with_green","with_green_f32","with_red","with_red_f32","Context","Message","Response","Window","Window","WindowAttributes","WindowBehavior","WindowHandle","active","app_name","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","axis_motion","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast_into","cast_into","cast_into","clear_color","clone","clone_into","close_requested","composite_alpha_mode","content_protected","cursor_entered","cursor_left","cursor_moved","cursor_position","decorations","default","downcast","downcast","downcast","dropped_file","elapsed","enabled_buttons","event","fmt","focus_changed","focused","from","from","from","from_cast","from_cast","from_cast","fullscreen","handle","hovered_file","hovered_file_cancelled","ime","initial_window_attributes","initialize","inner_size","inner_size","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","key_pressed","keyboard_input","last_frame_rendered_in","limits","max_inner_size","maximized","min_inner_size","modifiers","modifiers_changed","mouse_button_pressed","mouse_input","mouse_wheel","multisample_count","occlusion_changed","ocluded","position","position","power_preference","preferred_theme","prepare","received_character","redraw_at","redraw_in","render","resizable","resize_increments","resized","run","run","run_with","scale_factor_changed","send","set_ime_allowed","set_ime_cursor_area","set_ime_purpose","set_inner_size","set_max_inner_size","set_min_inner_size","set_needs_redraw","set_position","set_title","smart_magnify","theme","theme_changed","title","title","to_owned","touch","touchpad_magnify","touchpad_pressure","touchpad_rotate","transparent","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","visible","window_icon","window_level","winit","winit","Drawing","Renderer","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cast","cast","cast_into","cast_into","clipped_to","command_count","default","deref","deref_mut","downcast","downcast","draw_measured_text","draw_shape","draw_text","draw_text_buffer","draw_texture","draw_texture_at","draw_textured_shape","drop","fmt","fmt","from","from","from_cast","from_cast","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","measure_text","measure_text_buffer","new_frame","pop_clip","push_clip","render","triangle_count","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","vertex_count","Begin","Bevel","Butt","ControlPoint","CornerRadii","Cubic","DefaultStrokeWidth","End","Endpoint","Line","LineCap","LineJoin","Miter","MiterClip","Path","PathBuilder","PathEvent","Quadratic","Round","Round","Shape","Square","StrokeOptions","arc","arc","arc","arc_counter","arc_counter","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_left","bottom_right","build","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","clamped","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cm_wide","color","color","colored","cubic_curve_to","cubic_curve_to","default","default","default","default","default","default_stroke_width","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","end_cap","end_cap","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","fill","filled","filled_circle","filled_rect","filled_round_rect","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_iter","from_lp","from_lp","from_px","from_px","from_upx","from_upx","inches_wide","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_components","into_components","into_components","into_components","into_components","into_components","into_lp","into_lp","into_px","into_px","into_upx","into_upx","is_zero","line_join","line_join","line_to","line_to","line_width","location","lp_wide","map","miter_limit","miter_limit","mm_wide","new","new","new_textured","points_wide","prepare","prepare","px_wide","quadratic_curve_to","quadratic_curve_to","reset","reset","round_rect","start_cap","start_cap","stroke","stroked_circle","stroked_rect","stroked_round_rect","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tolerance","top_left","top_right","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","x","y","at","close","ctrl","ctrl1","ctrl2","texture","texture","texture","texture","to","to","to","AnimationMode","Collected","DirectionMissing","DirectionUnknown","Duration","Forward","Frame","FrameParseError","FrameTag","FrameTagError","From","Height","Image","InvalidFrame","InvalidSpriteTag","Json","Meta","MissingRegion","NotNumeric","PingPong","Region","Reverse","SizeMismatch","SizeMissing","Sprite","SpriteAnimation","SpriteAnimations","SpriteCollection","SpriteFrame","SpriteMap","SpriteParseError","SpriteSheet","SpriteSource","To","Width","X","Y","add_foreign_sheet","add_sheet","animation_for","animations","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","current_frame","current_tag","default","deref","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","duration","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_foreign_sheet","get_frame","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_components","into_components","into_components","into_iter","load_aseprite_json","merged","mode","new","new","new","new","new","new","prepare","remaining_frame_duration","set_current_tag","single_frame","source","sprite","sprite","sprite","sprite_map","sprites","sprites","texture","tile_size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sprite_map","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","with_duration","with_mode","error","error","key","name","Center","Custom","FirstBaseline","GlyphInfo","MeasuredGlyph","MeasuredText","PreparedText","Text","TextOrigin","TopLeft","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","ascent","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","cast","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color","default","deref","deref_mut","descent","downcast","downcast","downcast","downcast","downcast","downcast","end","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_lp","from_px","from_upx","glyphs","info","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_components","into_components","into_components","into_lp","into_px","into_upx","left","level","line","line_height","line_width","metadata","new","origin","origin","rect","rotate_by","scale","size","start","text","to_owned","to_owned","to_owned","to_owned","to_owned","translate_by","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","wrap_at","wrap_at","Color","DebugGrid","Layer","LayerContext","Layers","Object","Object","ObjectId","ObjectInfo","ObjectLayer","Point","Sprite","TILE_SIZE","Texture","TileArray","TileKind","TileList","TileMapFocus","TileOffset","TileSource","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_right","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","cast_into","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","elapsed","eq","equivalent","equivalent","equivalent","find_object","find_object","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","from_cast","get","get_mut","get_nth","get_nth_mut","hash","index","index","index_mut","index_mut","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_components","into_components","is_empty","layer","layer","layer","layer","layer_mut","layer_mut","layer_mut","layer_mut","len","len","maximum_tile","maximum_tile","minimum_tile","minimum_tile","new","new","object","origin","partial_cmp","position","position","push","render","render","render","render","render","render","render","render","render","tile_size","tiles","to_owned","to_owned","top_left","translate_coordinates","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visible_rect","width","world_coordinate","zoom","id","layer"],"q":[[0,"kludgine"],[612,"kludgine::app"],[758,"kludgine::render"],[817,"kludgine::shapes"],[1123,"kludgine::shapes::PathEvent"],[1135,"kludgine::sprite"],[1479,"kludgine::sprite::SpriteParseError"],[1483,"kludgine::text"],[1658,"kludgine::tilemap"],[1910,"kludgine::tilemap::TileMapFocus"],[1912,"core::any"],[1913,"wgpu"],[1914,"wgpu"],[1915,"figures::units"],[1916,"figures::rect"],[1917,"core::clone"],[1918,"core::cmp"],[1919,"core::fmt"],[1920,"core::fmt"],[1921,"figures::units"],[1922,"fontdb"],[1923,"core::default"],[1924,"cosmic_text::attrs"],[1925,"image::dynimage"],[1926,"wgpu_types"],[1927,"alloc::alloc"],[1928,"alloc::boxed"],[1929,"alloc::sync"],[1930,"alloc::rc"],[1931,"figures::size"],[1932,"wgpu_types"],[1933,"wgpu_types"],[1934,"core::ops::arith"],[1935,"core::convert"],[1936,"cosmic_text::buffer"],[1937,"figures::units"],[1938,"figures::traits"],[1939,"figures::fraction"],[1940,"cosmic_text::attrs"],[1941,"wgpu"],[1942,"figures::point"],[1943,"core::result"],[1944,"core::any"],[1945,"winit::event"],[1946,"core::marker"],[1947,"core::time"],[1948,"winit::event"],[1949,"core::convert"],[1950,"wgpu_types"],[1951,"winit::error"],[1952,"core::ops::function"],[1953,"core::panic::unwind_safe"],[1954,"winit::window"],[1955,"winit::window"],[1956,"winit::event"],[1957,"core::cmp"],[1958,"image::error"],[1959,"justjson::error"],[1960,"core::marker"]],"d":["Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A type that can be any <code>TextureSource</code> implementation that …","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","The grapihc should be drawn so that the center of the …","A clipped surface.","A graphics context that has been clipped.","A <code>CollectedTexture</code>.","A texture that is contained within a <code>TextureCollection</code>.","A red, green, blue, and alpha color value stored in …","The graphic should be drawn so that the provided relative …","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A drawable source with optional translation, rotation, and …","Translation, rotation, and scaling for drawable types.","A type that can be drawn in Kludgine.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A frame that can be rendered.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A context used to prepare graphics to render.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A 2d graphics instance.","A generic graphics context.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","The origin of a prepared graphic.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A graphic that is on the GPU and ready to render.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A <code>TextureRegion</code>.","A graphics context used to render previously prepared …","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A unit that is able to be scaled by the GPU shader.","A source of triangle data for a shape.","A <code>SharedTexture</code>.","A cloneable texture.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","An image stored on the GPU.","A <code>Texture</code>.","A collection of multiple textures, managed as a single …","A region of a <code>SharedTexture</code>.","A type that is rendered using a texture.","The graphic should be drawn so that the top-left of the …","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Aborts rendering this frame.","Returns the alpha component of this color, range 0-255. A …","Returns the alpha component of this color, range 0.0-1.0. …","Application and Windowing Support.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the blue component of this color, range 0-255.","Returns the blue component of this color, range 0.0-1.0.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current rectangular area of the context.","Returns a <code>ClipGuard</code> that causes all drawing operations to …","Returns a <code>ClipGuard</code> that causes all drawing operations to …","","","","","","","","","","","","","","","","","","","","Returns a reference to the underlying <code>wgpu::Device</code>.","Returns a reference to the underlying <code>wgpu::Device</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current font family.","Returns the current font size.","Returns the current font style.","Returns a mutable reference to the <code>cosmic_text::FontSystem</code> …","Returns a mutable reference to the <code>cosmic_text::FontSystem</code> …","Returns the current font weight.","Returns the format of the texture backing this collection.","The format of the texture.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Creates a texture from <code>image</code>.","Returns the green component of this color, range 0-255.","Returns the green component of this color, range 0.0-1.0.","","","Includes an Aseprite sprite sheet and Json export. For …","Loads a texture’s bytes into the executable.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new texture that loads its data to the gpu once …","Returns a texture that loads <code>image</code> into the gpu when it is …","Returns the current line height.","Returns a new atlas of the given size and format.","Returns a new instance of Kludgine with the provided …","Returns a new instance.","Returns a new color with the provided components.","Creates a new texture of the given size, format, and …","Returns a new color by converting each component from its …","Returns a new texture of the given size, format, and …","Begins rendering a new frame.","An opacity multiplier to apply to this drawable.","Restores the clipping rect to the previous state before …","","","Creates a <code>Graphics</code> context for this frame that can be used …","Returns a <code>PreparedGraphic</code> that renders this texture at <code>dest</code>…","Prepares to render this texture at the given location.","Prepares to render this texture at the given location.","Returns a <code>PreparedGraphic</code> for the entire texture.","Prepares the <code>source</code> area to be rendered at <code>dest</code>.","Prepares to render this texture with <code>size</code>. The returned …","Prepares the text layout contained in <code>buffer</code> to be …","Pushes a new clipping state to the clipping stack.","","","Pushes an image to this collection.","Pushes image data to a specific region of the texture.","Returns a reference to the underlying <code>wgpu::Queue</code>.","Returns a reference to the underlying <code>wgpu::Queue</code>.","Returns the red component of this color, range 0-255.","Returns the red component of this color, range 0.0-1.0.","Returns a reference to this texture that only renders a …","An easy-to-use batching renderer.","Creates a <code>RenderingGraphics</code> context for this frame which …","Renders this prepared graphic into <code>graphics</code> using the …","Renders the prepared graphic at <code>origin</code>, rotating and …","Creates a <code>RenderingGraphics</code> that renders into <code>texture</code> for …","Resets all of the text related properties to their default …","Updates the size and scale of this Kludgine instance.","Rotates <code>self</code> by <code>angle</code>.","","Rotate the source before rendering.","Scales <code>self</code> by <code>factor</code>.","Returns the current scaling factor of the display being …","","Returns the current scaling factor for the display this …","Scale the source before rendering.","Sets the current font family.","Sets the font size.","Sets the current font style.","Sets the current font weight.","Sets the line height for multi-line layout.","Sets the current text attributes.","Sets the current text stretching.","Types for drawing paths and shapes.","Returns the current size of the graphics area being …","Returns the current size of the underlying texture.","Returns the currently configured size to render.","Returns the current clipped size of the context.","The size of the texture.","Returns the size of the region being drawn.","Returns the size of the texture.","The source to draw.","Types for animating textures.","Submits all of the commands for this frame to the GPU.","Types for text rendering.","Returns the current text attributes.","Returns the current text stretch.","","","","","","","","Translates <code>self</code> by <code>point</code>.","","Translate the source before rendering.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new color replacing this colors alpha channel …","Returns a new color replacing this colors alpha channel …","Returns a new color replacing this colors blue channel …","Returns a new color replacing this colors blue channel …","Returns a new color replacing this colors green channel …","Returns a new color replacing this colors green channel …","Returns a new color replacing this colors red channel with …","Returns a new color replacing this colors red channel with …","The type of value provided during <code>initialize()</code>.","A message with an associated response type.","The type returned when responding to this message.","An open window.","The message type that is able to be sent to individual …","Attributes of a desktop window.","The behavior of a window.","A handle to a window.","Whether the window is active or not.","Name of the application","","","","","","","A multi-axis input device has registered motion.","","","","","","","","","","","","","Returns the color to clear the window with. If None is …","","","The window has been requested to be closed. This can …","Returns the composite alpha mode to use for rendering the …","If true, the contents of the window will be prevented from …","A cursor has hovered over the window.","A cursor is no longer hovering over the window.","A cursor has moved over the window.","Returns the position of the mouse cursor within this …","Controls the visibility of the window decorations.","","","","","A file has been dropped on the window.","Returns the duration that has elapsed since the last frame …","The collection of window buttons that are enabled.","A <code>WindowEvent</code> has been received by this window.","","The window has gained or lost keyboard focus. …","Returns true if the window is currently focused for …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The full screen configuration for the window.","Returns a handle to this window, which can be used to send …","A file is hovering over the window.","A file being overed has been cancelled.","An international input even thas occurred for the window.","Returns the window attributes to use when creating the …","Initialize a new instance from the provided context.","Returns the inner size of the window.","The inner size of the window.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if the given virtual key code is currently …","A keyboard event occurred while the window was focused.","Returns the duration taken between when the last frame’s …","Returns the limits to apply for the <code>wgpu</code> instance.","The maximum inner size of the window.","The maximized state of the window.","The minimum inner size of the window.","Returns currently active modifiers.","The keyboard modifier keys have changed. …","Returns true if the given button is currently pressed.","A mouse button was pressed or released.","An event from a mouse wheel.","Returns the number of multisamples to perform when …","The window has been occluded or revealed. …","Returns true if the window is currenly not visible because …","Returns the current position of the window.","The position of the top-left of the frame of the window.","Returns the power preference to initialize <code>wgpu</code> with.","The window’s preferred theme.","Prepare the window to render.","An input event has generated a character.","Sets the window to redraw at the provided time.","Sets the window to redraw after a <code>duration</code>.","Render the contents of the window.","If true, the window can be resized by the user.","The increments in which the window will be allowed to …","The window has been resized. <code>RunningWindow::inner_size()</code> …","Runs a callback as a single window. Continues to run until …","Launches a Kludgine app using this window as the primary …","Launches a Kludgine app using this window as the primary …","The window’s scale factor has changed. …","Sends <code>message</code> to the window. If the message cannot be","Sets whether IME input is allowed on the window.","Sets the cursor area for IME input suggestions.","Sets the IME purpose.","Sets the inner size of the window.","Sets the window’s maximum inner size.","Sets the window’s minimum inner size.","Sets the window to redraw as soon as it can.","Sets the current position of the window.","Sets the title of the window.","A request to smart-magnify the window.","Returns the current user interface theme for the window.","The window’s theme has been updated. …","Returns the current title of the window.","The title of the window.","","A touch event.","A touchpad-originated magnification gesture.","A pressure-sensitive touchpad was touched.","A touchpad-originated rotation gesture.","If true, the window’s chrome will be hidden and only …","","","","","","","","","","","","","The visibility state of the window.","The window’s icon.","The level of the window.","","Returns a reference to the underlying winit window.","A composite, multi-operation graphic, created with an …","An easy-to-use graphics renderer that batches operations …","","","","","","","","","","","","","Returns a <code>ClipGuard</code> that causes all drawing operations to …","Returns the number of drawing operations that will be sent …","","","","","","Prepares the text layout contained in <code>buffer</code> to be …","Draws a shape at the origin, rotating and scaling as …","Draws <code>text</code> using the current text settings.","Prepares the text layout contained in <code>buffer</code> to be …","Draws <code>texture</code> at <code>destination</code>, scaling as necessary.","Draws <code>texture</code> at <code>destination</code>.","Draws a shape that was created with texture coordinates, …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Measures <code>text</code> using the current text settings.","Measures <code>buffer</code> and caches the results using <code>default_color</code> …","Clears the currently prepared graphics and returns a new …","","","Renders the prepared graphics from the last frame.","Returns the number of triangles that are being rendered in …","","","","","","","","","Returns the number of vertexes that compose the drawing …","Begins a path. Must be at the start.","A beveled corner is to be used to join path segments. The …","The stroke for each sub-path does not extend beyond its …","A control point used to create curves.","A description of the size to use for each corner radius …","A cubic curve (two control points).","Controls the default stroke width for a given unit.","Ends the path. Must be the last entry.","A point on a <code>Path</code>.","A straight line segment.","Line cap as defined by the SVG specification.","Line join as defined by the SVG specification.","A sharp corner is to be used to join path segments.","Same as a miter join, but if the miter limit is exceeded, …","A geometric shape defined by a path.","Builds a <code>Path</code>.","An entry in a <code>Path</code>.","A quadratic curve (one control point).","At each end of each sub-path, the shape representing the …","A round corner is to be used to join path segments.","A tesselated shape.","At the end of each sub-path, the shape representing the …","Options for stroking lines on a path.","Add a clockwise arc starting at the current location.","Add a clockwise arc starting at the current location.","Returns a path forming an arc starting at <code>start</code> angle of …","Add a counter-clockwise arc starting at the current …","Add a counter-clockwise arc starting at the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The radius of the bottom left rounded corner.","The radius of the bottom right rounded corner.","Returns the built path.","","","","","","","","","","","","","","","","","","","Returns this set of radii clamped so that no corner radius …","","","","","","","","","","","","","","","","","Closes the path, connecting the current location to the …","Returns the default options with the line width specified …","The color to associate with this endpoint.","The color to apply to the stroke.","Sets the color of this stroke and returns self.","Create a cubic curve from the current location to <code>end_at</code> …","Create a cubic curve from the current location to <code>end_at</code> …","","","","","","Returns the default width of a line stroked in this unit.","","","","","","","","","","Sets the line cap style for the end of line segments and …","What cap to use at the end of each sub-path.","","","","","","","","","Fills this path with <code>color</code>.","Fills this path with solid white.","Returns a circle that is filled solid with <code>color</code>.","Returns a rectangle that is filled solid with <code>color</code>.","Returns a rounded rectangle with the specified corner …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the default options with the line width specified …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the line join style and returns self.","See the SVG specification.","Create a straight line from the current location to <code>end_at</code>.","Create a straight line from the current location to <code>end_at</code>.","The width of the line.","The location of the endpoint on a path.","Returns the default options with a line width of <code>lp</code>.","Passes each radius definition to <code>map</code> and returns a new set …","Sets the miter limit and returns self.","See the SVG specification.","Returns the default options with the line width specified …","Creates a new path with the initial position <code>start_at</code>.","Returns a new endpoint with a given location and color.","Creates a new path with the initial position <code>start_at</code>.","Returns the default options with the line width specified …","Uploads the shape to the GPU, applying <code>texture</code> to the …","Uploads the shape to the GPU.","Returns the default options with a line width of <code>px</code>.","Create a quadratic curve from the current location to …","Create a quadratic curve from the current location to …","Clears this builder to a state as if it had just been …","Clears this builder to a state as if it had just been …","Returns a path for a rounded rectangle with the given …","Sets the line cap style for the start of line segments and …","What cap to use at the start of each sub-path.","Strokes this path with <code>color</code> and <code>options</code>.","Returns a circle that is stroked with <code>color</code> and <code>options</code>.","Returns a rectangle that has its outline stroked with <code>color</code>…","Returns a rounded rectangle with the specified corner …","","","","","","","","","Maximum allowed distance to the path when building an …","The radius of the top left rounded corner.","The radius of the top right rounded corner.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The x-axis component.","The y-axis component","The location to begin at.","Whether the path should be closed.","The control point for the curve.","The first control point for the curve.","The second control point for the curve.","The texture coordinate for this path event.","The texture coordinate for this path event.","The texture coordinate for this path event.","The texture coordinate for this path event.","The end location of the line.","The end location of the curve.","The end location of the curve.","The animation mode of the sprite.","The sprite’s source is a <code>CollectedTexture</code>.","The direction field is missing.","The direction is not a recognized value.","The duration is invalid or missing.","Iterate frames in order. When at the end, reset to the …","An error occurred parsing a frame.","An error parsing a single frame in a sprite animation.","An error parsing a frame tag (animation).","An error parsing a <code>frameTags</code> entry.","The from field is missing or invalid.","The <code>frame.h</code> value is missing or invalid.","An image parsing error.","The frame could not be found.","A <code>Sprite</code>’s tag did not correspond to an animation.","Invalid JSON.","The <code>meta</code> field is missing or invalid.","The data is missing the <code>frame</code> field, which contains the …","The frame number was not able to be parsed as a number.","Iterate frames starting at the beginning and continuously …","The sprite’s source is a <code>TextureRegion</code>.","Iterate frames in reverse order. When at the start, reset …","The size does not match the provided texture.","The size information is missing.","A sprite is a renderable graphic with optional animations.","An animation of one or more <code>SpriteFrame</code>s.","A collection of <code>SpriteAnimation</code>s. This is an immutable …","A collection of sprites.","A single frame for a <code>SpriteAnimation</code>.","A collection of <code>SpriteSource</code>s.","An error occurred parsing a <code>Sprite</code>.","A collection of sprites from a single <code>SharedTexture</code>.","A region of a texture that is used as frame in a sprite …","The to field is missing or invalid.","The <code>frame.w</code> value is missing or invalid.","The <code>frame.x</code> value is missing or invalid.","The <code>frame.y</code> value is missing or invalid.","Adds a collection from <code>sheet</code> using <code>converter</code> to convert …","Adds all sprites from <code>sheet</code>.","Returns the animation for <code>tag</code>.","The animations that form this sprite.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve the current animation frame, if set and valid.","Returns the current tag.","","","","","","","","","","","","","","","The length the frame should be displayed. <code>None</code> will act as …","","","","","","","","","","","","","","","","","","","","","","","","","The frames of the animation.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Creates a collection from <code>sheet</code> using <code>converter</code> to convert …","Gets the current frame after advancing the animation for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Loads Aseprite JSON export format, when using the correct …","For merging multiple Sprites that have no tags within them","The mode of the animation.","Returns a new sprite with <code>animations</code>.","Creates a new collection from <code>animations</code>.","Creates a new animation with <code>frames</code> and …","Creates a new frame with <code>source</code> and no duration.","Creates a new sprite sheet, diving <code>texture</code> into a grid of …","Creates a new collection with <code>sprites</code>.","Returns a <code>PreparedGraphic</code> that renders this texture at <code>dest</code>…","Returns the amount of time remaining until the next frame …","Sets the current tag for the animation. If the tag …","Creates an instance from a texture. This creates a …","The source to render.","Returns the sprite referred to by <code>tile</code>.","","","Returns the sprites identified by each element in <code>iterator</code> …","Returns all of the requested <code>tiles</code>.","Returns the sprites identified by each element in <code>iterator</code>.","The source texture.","Returns the size of the tiles within this sheet.","","","","","","","","","","","","Returns a collection of all tiles in the sheet  as","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builder-style function. Sets <code>duration</code> and returns self.","Builder-style function. Sets <code>mode</code> and returns self.","The error that occurred.","The error that occurred.","The object key for the frame.","The name of the frame tag.","Render the text such that the center of the extents of the …","Render the text such that the text is offset by a custom …","Render the text such that the leftmost pixel of the …","Information about a glyph in a <code>MeasuredText</code>.","Instructions for drawing a laid out glyph.","The dimensions of a measured text block.","Text that is ready to be rendered on the GPU.","A text drawing command.","Controls the origin of <code>PreparedText</code>.","Render the text such that the top-left of the first line …","","","","","","","","","","","","","The measurement above the baseline of the text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The color to draw the text using.","","","","The measurement below the baseline of the text.","","","","","","","End index of cluster in original line","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","The individual glyhs that were laid out.","Information about what glyph this is.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The measurement to the leftmost pixel of the text.","Unicode BiDi embedding level, character is left-to-right …","The line index this glyph is visually laid out on.","The measurement above the baseline of the text.","The width of the line this glyph is on.","Custom metadata set in <code>cosmic_text::Attrs</code>.","Returns a text command that draws <code>text</code> with <code>color</code>.","Sets the origin for the text drawing operation and returns …","The origin to draw the text around.","Returns the destination rectangle for this glyph.","","","The total size of the measured text, encompassing all …","Start index of cluster in original line","The text to be drawn.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the width to wrap text at and returns self.","The width to wrap the text at. If <code>None</code>, no wrapping is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,17,0,0,30,0,0,17,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,3,3,3,3,0,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,30,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,30,0,3,3,3,3,3,0,30,0,0,0,17,3,3,3,3,3,3,1,3,3,0,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,7,7,3,3,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,7,13,21,15,16,3,17,19,20,15,16,3,17,19,20,0,17,7,14,19,7,14,13,7,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,16,14,3,17,19,20,3,3,3,17,17,17,19,19,19,20,20,20,0,16,26,28,7,14,3,29,17,19,20,30,28,28,28,28,7,28,15,29,1,13,37,37,37,15,16,26,28,7,14,3,3,29,17,19,19,20,20,30,30,30,30,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,29,3,3,3,0,0,0,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,3,17,3,29,29,28,15,28,7,3,29,3,29,28,37,21,13,7,1,16,29,20,15,29,29,7,21,13,7,15,15,13,7,3,3,19,0,1,37,26,1,28,28,183,37,37,183,13,37,28,37,28,28,28,28,28,28,28,0,13,15,28,7,29,20,30,37,0,1,0,28,28,0,15,16,3,17,19,20,183,37,37,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,1,13,37,15,16,26,28,7,14,3,29,17,19,20,30,0,3,3,3,3,3,3,3,3,184,0,185,0,185,0,0,0,89,89,81,89,85,81,89,85,184,81,89,85,81,89,85,81,89,85,81,89,85,184,85,85,184,184,89,184,184,184,81,89,89,81,89,85,184,81,89,184,85,184,81,81,89,85,81,89,85,89,81,184,184,184,184,184,81,89,81,89,85,81,89,85,89,85,81,89,85,81,184,81,184,89,89,89,81,184,81,184,184,184,184,81,81,89,184,89,184,184,81,81,184,89,89,184,0,184,184,184,85,81,81,81,81,81,81,81,81,81,184,81,184,81,89,85,184,184,184,184,89,81,89,85,81,89,85,81,89,85,81,89,85,89,89,89,0,81,0,0,116,118,116,118,116,118,116,118,116,118,116,118,116,116,118,116,116,116,118,116,116,116,116,116,116,116,116,116,118,116,118,116,118,116,118,116,118,116,118,116,118,116,116,118,116,116,118,116,116,118,116,118,116,118,116,118,116,131,130,129,0,0,131,0,131,0,131,0,0,130,130,0,0,0,131,129,130,0,129,0,123,123,126,123,123,123,129,130,120,125,131,126,132,127,123,129,130,120,125,131,126,132,127,123,129,130,120,125,131,126,132,127,123,129,130,120,125,131,126,132,127,127,127,123,123,129,130,120,125,131,126,132,127,123,129,130,120,125,131,126,132,127,127,129,130,120,125,131,126,132,127,129,130,120,125,131,126,132,127,123,132,125,132,132,123,123,123,120,125,126,132,135,123,129,130,120,125,131,126,132,127,132,132,129,130,120,132,127,127,127,127,126,126,120,120,120,129,130,120,125,131,126,132,127,123,123,129,130,120,125,125,125,131,126,132,132,127,127,127,123,129,130,120,125,131,126,132,127,126,132,127,132,127,132,127,132,123,129,130,120,125,131,126,132,127,123,129,130,120,125,131,126,132,127,123,129,130,120,125,131,126,132,127,123,129,130,120,125,131,126,132,127,129,130,125,131,132,127,132,127,132,127,132,127,127,132,132,123,123,132,125,132,127,132,132,132,123,125,123,132,120,120,132,123,123,123,123,126,132,132,126,120,120,120,129,130,120,125,131,126,132,127,132,127,127,123,129,130,120,125,131,126,132,127,123,129,130,120,125,131,126,132,127,123,129,130,120,125,131,126,132,127,123,129,130,120,125,131,126,132,127,134,134,186,187,188,189,189,186,190,188,189,190,188,189,0,160,156,156,155,154,162,0,162,0,156,155,162,156,0,162,162,155,155,154,160,154,162,162,0,0,0,0,0,0,0,0,0,156,155,155,155,146,146,151,158,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,154,155,156,157,158,151,152,159,147,146,160,154,155,156,157,158,151,152,159,147,146,160,158,158,146,146,154,162,155,156,157,158,151,152,159,147,146,160,159,155,156,157,155,155,155,156,156,156,157,157,157,154,162,155,156,157,158,151,152,159,147,146,160,152,154,162,162,162,155,156,157,158,158,151,152,159,147,146,160,160,160,154,162,155,156,157,158,151,152,159,147,146,160,146,158,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,155,156,157,146,158,158,152,158,151,152,159,147,146,160,158,158,158,159,191,147,146,147,191,147,147,147,154,155,156,157,158,151,152,159,147,146,160,147,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,154,162,155,156,157,158,151,152,159,147,146,160,159,152,192,193,193,192,60,60,60,0,0,0,0,0,0,60,61,60,119,166,167,40,61,60,119,166,167,40,119,61,60,119,166,167,40,61,60,119,166,167,40,61,60,119,166,167,40,61,60,119,166,167,40,60,119,166,167,40,60,119,166,167,40,40,60,61,61,119,61,60,119,166,167,40,167,60,60,60,60,61,60,119,166,167,40,61,60,119,166,167,40,40,40,61,60,119,166,167,40,60,60,60,119,166,61,60,119,166,167,40,61,60,119,166,167,40,61,60,119,166,167,40,61,60,119,166,167,40,60,167,40,60,60,60,119,167,167,119,167,167,40,40,40,166,40,40,119,167,40,60,119,166,167,40,40,61,60,119,166,167,40,61,60,119,166,167,40,61,60,119,166,167,40,61,60,119,166,167,40,40,40,177,0,0,0,0,0,171,0,0,0,171,177,0,177,0,0,0,0,0,0,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,168,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,170,171,170,171,170,170,173,171,168,168,169,168,176,177,173,170,178,171,179,0,168,170,170,170,170,180,173,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,173,173,173,173,170,173,173,173,173,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,170,171,173,174,176,173,179,174,176,173,179,182,173,194,176,194,176,176,173,178,168,170,175,178,173,180,194,175,176,176,177,173,179,179,168,176,170,171,168,0,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,169,168,176,177,173,170,178,171,179,168,176,171,168,195,195],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[3,5],0,[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[7,8],[7,9],[3,4],[3,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,[[12,[11]]]],[[13,[12,[11]]],[[14,[13]]]],[[-1,[12,[11]]],[[14,[-1]]],[]],[15,15],[16,16],[3,3],[[[17,[-1]]],[[17,[-1]]],18],[19,19],[20,20],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],[[17,[-1]]],[]],[7],[[[14,[-1]]],[],21],[19],[7],[[[14,[-1]]],[],21],[13,8],[7,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[16,2],[[[14,[-1]]],2,21],[[3,3],22],[[[17,[-1]],[17,[-1]]],22,23],[[19,19],22],[[20,20],22],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],0,[[16,24],25],[[[26,[-1]],24],25,27],[[28,24],25],[[7,24],25],[[[14,[-1]],24],25,[21,27]],[[3,24],25],[[29,24],25],[[[17,[-1]],24],25,27],[[19,24],25],[[20,24],25],[[30,24],25],[28,31],[28,32],[28,33],[28,34],[7,34],[28,35],[15,36],[29,36],[-1,-1,[]],[-1,-1,[]],[-1,[[37,[-1,-2]]],38,39],[[[40,[-1]]],[[37,[[40,[-1]],-1]]],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,3],[-1,-1,[]],[-1,-1,[]],[29,19],[-1,-1,[]],[-1,-1,[]],[19,20],[20,30],[16,30],[29,30],[-1,-1,[]],[19,30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[42,43,7],29],[3,4],[3,5],[[3,-1],2,44],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,22,[]],[[[49,[11]],36,50,43,[51,[4]]],29],[[42,43],29],[28,32],[[[49,[11]],36,43,7],15],[[8,9,36,52,[49,[11]],5],28],[[28,8,9],7],[[4,4,4,4],3],[[7,[49,[11]],36,50,43],29],[[5,5,5,5],3],[[7,[49,[11]],36,50,43,[53,[4]]],29],[28,1],0,[-1,2,[]],[13,2],[7,2],[[1,8,9],7],[[16,[12,[-1]],7],[[26,[-1]]],[54,[56,[55]]]],[[29,[12,[-1]],7],[[26,[-1]]],54],[[20,[12,[-1]],7],[[26,[-1]]],54],[[15,[12,[-1]],7],[[26,[-1]]],54],[[29,[12,[11]],[12,[-1]],7],[[26,[-1]]],54],[[29,[17,[-1]],[49,[-1]],7],[[26,[-1]]],[54,[57,[55]]]],[[7,58,3,[60,[59]]],61],[[-1,[12,[11]]],2,[]],[[13,[12,[11]]],2],[[7,[12,[11]]],2],[[15,42,7],16],[[15,[53,[4]],62,[49,[11]],7],16],[13,9],[7,9],[3,4],[3,5],[[19,[12,[11]]],20],0,[[1,63,8,9],13],[[[37,[[26,[-1]],-1]],13],2,[64,65,39,66,67,68]],[[[26,[-1]],13],2,[64,65,39,66,67,68]],[[1,29,[69,[3]],7],13],[28,2],[[28,[49,[11]],5,9],2],[[-1,70],[[37,[-2,-3]]],[],[],[]],[[[37,[-1,-2]],70],[[37,[-1,-2]]],[],[]],0,[[-1,5],[[37,[-2,-3]]],[],[],[]],[13,71],[[[37,[-1,-2]],5],[[37,[-1,-2]]],[],[]],[28,71],0,[[28,72],2],[[28,-1],2,73],[[28,33],2],[[28,35],2],[[28,-1],2,73],[[28,74],2],[[28,75],2],0,[13,[[49,[11]]]],[15,[[49,[11]]]],[28,[[49,[11]]]],[7,[[49,[11]]]],[29,[[49,[11]]]],[20,[[49,[11]]]],[30,[[49,[11]]]],0,0,[[1,9],[[77,[76]]]],0,[28,74],[28,75],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[78,[-2]]],[[37,[-3,-2]]],[],[],[]],[[[37,[-1,-2]],[78,[-2]]],[[37,[-1,-2]]],[],[]],0,[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],0,[[3,4],3],[[3,5],3],[[3,4],3],[[3,5],3],[[3,4],3],[[3,5],3],[[3,4],3],[[3,5],3],0,0,0,0,0,0,0,0,0,0,[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[[-1,[81,[-2]],28,82,83,84],2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[77,[3]]],[]],[[[85,[-1]]],[[85,[-1]]],18],[[-1,-2],2,[],[]],[[-1,[81,[-2]],28],22,[],[]],[[-1,[53,[86]]],86,[]],0,[[-1,[81,[-2]],28,82],2,[],[]],[[-1,[81,[-2]],28,82],2,[],[]],[[-1,[81,[-2]],28,82,[87,[84]]],2,[],[]],[[[81,[-1]]],[[77,[[78,[59]]]]],88],0,[[],89],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[81,[-2]],28,90],2,[],[]],[[[81,[-1]]],91,88],0,[[-1,[81,[-2]],28,-2],2,[],[]],[[[85,[-1]],24],25,27],[[-1,[81,[-2]],28],2,[],[]],[[[81,[-1]]],22,88],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[[81,[-1]]],[[85,[-1]]],88],[[-1,[81,[-2]],28,90],2,[],[]],[[-1,[81,[-2]],28],2,[],[]],[[-1,[81,[-2]],28,92],2,[],[]],[[],89],[[[81,[-1]],7],-2,[],[]],[[[81,[-1]]],[[49,[11]]],88],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[81,[-1]],-2],22,88,[[94,[93]]]],[[-1,[81,[-2]],28,82,95,22],2,[],[]],[[[81,[-1]]],91,88],[96,96],0,0,0,[[[81,[-1]]],97,88],[[-1,[81,[-2]],28],2,[],[]],[[[81,[-1]],98],22,88],[[-1,[81,[-2]],28,82,99,98],2,[],[]],[[-1,[81,[-2]],28,82,100,101],2,[],[]],[[],102],[[-1,[81,[-2]],28],2,[],[]],[[[81,[-1]]],22,88],[[[81,[-1]]],[[78,[59]]],88],0,[[],103],0,[[-1,[81,[-2]],7],2,[],[]],[[-1,[81,[-2]],28,104],2,[],[]],[[[81,[-1]],105],2,88],[[[81,[-1]],91],2,88],[[-1,[81,[-2]],13],22,[],[]],0,0,[[-1,[81,[-2]],28],2,[],[]],[-1,[[79,[2,106]]],[107,88,108]],[[],[[79,[2,106]]]],[[],[[79,[2,106]]]],[[-1,[81,[-2]],28],2,[],[]],[[[85,[-1]],-1],[[79,[2,-1]]],[]],[[[81,[-1]],22],2,88],[[[81,[-1]],[12,[11]]],2,88],[[[81,[-1]],109],2,88],[[[81,[-1]],[49,[11]]],2,88],[[[81,[-1]],[77,[[49,[11]]]]],2,88],[[[81,[-1]],[77,[[49,[11]]]]],2,88],[[[81,[-1]]],2,88],[[[81,[-1]],[78,[59]]],2,88],[[[81,[-1]],110],2,88],[[-1,[81,[-2]],28,82],2,[],[]],[[[81,[-1]]],111,88],[[-1,[81,[-2]],28],2,[],[]],[[[81,[-1]]],112,88],0,[-1,-2,[],[]],[[-1,[81,[-2]],28,113],2,[],[]],[[-1,[81,[-2]],28,82,84,101],2,[],[]],[[-1,[81,[-2]],28,82,5,114],2,[],[]],[[-1,[81,[-2]],28,82,5,101],2,[],[]],0,[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],0,0,0,0,[[[81,[-1]]],115,88],0,0,[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[116,[12,[11]]],[[14,[116]]]],[116,117],[[],118],[116],[116],[-1,-2,[],[]],[-1,-2,[],[]],[[116,-2,[60,[-1]]],2,67,[[94,[[37,[[119,[-1]],-1]]]]]],[[116,-2],2,[68,66,67,54,65],[[94,[[37,[[120,[-1]],-1]]]]]],[[116,-2],2,67,[[94,[[37,[[40,[-1]],-1]]]]]],[[116,-2,3,[60,[59]]],2,67,[[94,[[37,[58,-1]]]]]],[[116,-1,[12,[-2]]],2,121,[54,67,66]],[[116,-1,[78,[-2]]],2,121,[54,67,66]],[[116,-3,-4],2,[68,66,67,54,65],[[122,[-1]]],[[94,[[37,[-2,-1]]]]],121],[116,2],[[116,24],25],[[118,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[116,-2],[[119,[-1]]],67,[[94,[[40,[-1]]]]]],[[116,58,3],[[119,[-1]]],67],[[118,7],116],[116,2],[[116,[12,[11]]],2],[[118,13],2],[116,117],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,80,[]],[-1,80,[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[116,117],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[123,[-1]],[78,[-1]],[49,[-1]],70,-2],[[123,[-1]]],[124,65],[[94,[[125,[11]]]]]],[[[123,[-1]],-2,[49,[-1]],70],[[123,[-1]]],[124,65],[[94,[[125,[-1]]]]]],[[[78,[-1]],[49,[-1]],70,70],[[126,[-1]]],124],[[[123,[-1]],[78,[-1]],[49,[-1]],70,-2],[[123,[-1]]],[124,65],[[94,[[125,[11]]]]]],[[[123,[-1]],-2,[49,[-1]],70],[[123,[-1]]],[124,65],[[94,[[125,[-1]]]]]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[123,[-1]]],[[126,[-1]]],65],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[127,[-1]],-1],[[127,[-1]]],[128,65]],[129,129],[130,130],[[[120,[-1]]],[[120,[-1]]],18],[[[125,[-1]]],[[125,[-1]]],18],[[[131,[-1]]],[[131,[-1]]],18],[[[126,[-1]]],[[126,[-1]]],18],[[[132,[-1]]],[[132,[-1]]],18],[[[127,[-1]]],[[127,[-1]]],18],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[123,[-1]]],[[126,[-1]]],65],[-1,[[132,[32]]],[[94,[133]]]],0,0,[[[132,[-1]],3],[[132,[-1]]],[]],[[[123,[-1]],[134,[-1]],[134,[-1]],-2],[[123,[-1]]],65,[[94,[[125,[-1]]]]]],[[[123,[-1]],[134,[-1]],[134,[-1]],-2,[78,[11]]],[[123,[-1]]],65,[[94,[[125,[-1]]]]]],[[],[[123,[-1]]],[39,65]],[[],[[120,[-1]]],[]],[[],[[125,[-1]]],39],[[],[[126,[-1]]],39],[[],[[132,[-1]]],135],[[],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[132,[-1]],129],[[132,[-1]]],[]],0,[[129,129],22],[[130,130],22],[[[120,[-1]],[120,[-1]]],22,23],[[[132,[-1]],[132,[-1]]],22,23],[[[127,[-1]],[127,[-1]]],22,23],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[[126,[-1]],3],[[120,[-1]]],[124,65,136]],[[[126,[-1]]],[[120,[-1]]],[124,65,136]],[[-1,3,[17,[-1]]],[[120,[-1]]],[39,137,138,139,124,65,136]],[[[12,[-1]],3],[[120,[-1]]],[138,139,124,65,136]],[[[12,[-1]],-2,3],[[120,[-1]]],[138,140,56,[141,[5]],[142,[55]],139,124,65,136],[[94,[[127,[-1]]]]]],[[129,24],[[79,[2,143]]]],[[130,24],[[79,[2,143]]]],[[[120,[-1]],24],25,27],[[[125,[-1]],24],25,27],[[[131,[-1]],24],25,27],[[[126,[-1]],24],25,27],[[[132,[-1]],24],25,27],[[[127,[-1]],24],25,27],[[[126,[-1]]],[[123,[-1]]],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[78,[-1]]],[[125,[-1]]],[]],[-1,-1,[]],[[[2,[[78,[-1]],3]]],[[125,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[3,[[132,[-1]]],135],[-1,-1,[]],[144,-1,[]],[-1,-1,[]],[-1,[[127,[-1]]],65],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[126,[-2]]],145,[]],[71,[[132,[-1]]],73],[71,[[127,[-1]]],73],[71,[[132,[-1]]],73],[71,[[127,[-1]]],73],[71,[[132,[-1]]],73],[71,[[127,[-1]]],73],[-1,[[132,[32]]],[[94,[133]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[[[132,[-1]],71],[],73],[[[127,[-1]],71],[],73],[[[132,[-1]],71],[],73],[[[127,[-1]],71],[],73],[[[132,[-1]],71],[],73],[[[127,[-1]],71],[],73],[[[127,[-1]]],22,68],[[[132,[-1]],130],[[132,[-1]]],[]],0,[[[123,[-1]],-2],[[123,[-1]]],65,[[94,[[125,[-1]]]]]],[[[123,[-1]],-2,[78,[11]]],[[123,[-1]]],65,[[94,[[125,[-1]]]]]],0,0,[-1,[[132,[32]]],[[94,[32]]]],[[[127,[-1]],-2],[[127,[-3]]],[],107,[]],[[[132,[-1]],5],[[132,[-1]]],[]],0,[-1,[[132,[32]]],[[94,[133]]]],[-2,[[123,[-1]]],65,[[94,[[125,[-1]]]]]],[[[78,[-1]],3],[[125,[-1]]],[]],[[-2,[78,[11]]],[[123,[-1]]],65,[[94,[[125,[-1]]]]]],[-1,[[132,[32]]],[[94,[133]]]],[[[120,[-1]],-2,7],[[26,[-1]]],65,121],[[[120,[-1]],7],[[26,[-1]]],[65,136]],[-1,[[132,[59]]],[[94,[59]]]],[[[123,[-1]],[134,[-1]],-2],[[123,[-1]]],65,[[94,[[125,[-1]]]]]],[[[123,[-1]],[134,[-1]],-2,[78,[11]]],[[123,[-1]]],65,[[94,[[125,[-1]]]]]],[[[123,[-1]],-2,[78,[11]]],2,65,[[94,[[125,[-1]]]]]],[[[123,[-1]],-2],2,65,[[94,[[125,[-1]]]]]],[[[12,[-1]],-2],[[126,[-1]]],[138,140,56,[141,[5]],[142,[55]],139,124,65],[[94,[[127,[-1]]]]]],[[[132,[-1]],129],[[132,[-1]]],[]],0,[[[126,[-1]],-2],[[120,[-1]]],[124,65,136],[[94,[[132,[-1]]]]]],[[-1,3,[17,[-1]],-2],[[120,[-1]]],[39,137,138,139,124,65,136],[[94,[[132,[-1]]]]]],[[[12,[-1]],-2],[[120,[-1]]],[138,139,124,65,136],[[94,[[132,[-1]]]]]],[[[12,[-1]],-2,-3],[[120,[-1]]],[138,140,56,[141,[5]],[142,[55]],139,124,65,136],[[94,[[127,[-1]]]]],[[94,[[132,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[146,[-1]],[147,[-2]],-3],2,[27,148,149],[18,27,148,149],150],[[[146,[-1]],[147,[-1]]],2,[18,27,148,149]],[[151,[77,[-1]]],[[77,[152]]],153],0,[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[154,154],[155,155],[156,156],[157,157],[158,158],[151,151],[152,152],[159,159],[[[147,[-1]]],[[147,[-1]]],[27,18]],[[[146,[-1]]],[[146,[-1]]],18],[160,160],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[158,[[79,[160,157]]]],[158,[[77,[110]]]],[[],[[146,[-1]]],[]],[[[146,[-1]]],[[161,[-1,160]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[155,155],22],[[156,156],22],[[157,157],22],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[154,24],25],[[162,24],25],[[155,24],25],[[156,24],25],[[157,24],25],[[158,24],25],[[151,24],25],[[152,24],25],[[159,24],25],[[[147,[-1]],24],25,[27,27]],[[[146,[-1]],24],25,27],[[160,24],25],0,[-1,-1,[]],[-1,-1,[]],[163,162],[164,162],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[151,158],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,160],[-1,-1,[]],[16,160],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[147,[-1]],-2],[[146,[-3]]],[18,27,148,149],150,[27,148,149]],[[158,[77,[91]]],[[79,[160,157]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[[[146,[-1]]],[],[]],[[110,19],[[79,[158,162]]]],[-1,158,145],0,[151,158],[[[161,[[77,[112]],152]]],151],[[[51,[159]]],152],[-1,159,[[94,[160]]]],[[-1,[49,[11]],[51,[-2]]],[[147,[-2]]],[[94,[19]]],[27,148,149]],[[[161,[-1,160]]],[[146,[-1]]],[27,148,149]],[[160,[12,[-1]],7],[[26,[-1]]],[54,[56,[55]]]],[158,[[79,[[77,[91]],157]]]],[[158,[77,[-1]]],[[79,[2,157]]],[[94,[112]]]],[19,158],0,[[-1,-2],[[77,[160]]],[],[]],[[[147,[-1]],-1],[[77,[160]]],[27,88,165,148,149]],[[[146,[-1]],-1],[[77,[160]]],[88,165,148,149]],[[[147,[-1]],-2],[[146,[-1]]],[27,148,149],145],[[-1,[53,[-2]]],[[51,[160]]],[],[]],[[[147,[-1]],-2],[[51,[160]]],[27,148,149],145],0,[[[147,[-1]]],[[49,[11]]],[27,148,149]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[147,[-1]]],[[146,[-1]]],[18,27,148,149]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[[159,91],159],[[152,154],152],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[60,[-1]]],[[60,[-1]]],18],[[[119,[-1]]],[[119,[-1]]],18],[166,166],[167,167],[[[40,[-1]]],[[40,[-1]]],18],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],[[60,[-1]]],[]],[61],[61],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[60,[-1]],[60,[-1]]],22,23],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[61,24],25],[[[60,[-1]],24],25,27],[[[119,[-1]],24],25,27],[[166,24],25],[[167,24],25],[[[40,[-1]],24],25,27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[112,[[40,[-1]]],[]],[110,[[40,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[71,[[60,[-1]]],73],[71,[[60,[-1]]],73],[71,[[60,[-1]]],73],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[[[60,[-1]],71],[],73],[[[60,[-1]],71],[],73],[[[60,[-1]],71],[],73],0,0,0,0,0,0,[[110,3],[[40,[-1]]],[]],[[[40,[-1]],[60,[-1]]],[[40,[-1]]],[]],0,[166,[[12,[59]]]],[[-1,70],[[37,[-2,-3]]],[],[],[]],[[-1,5],[[37,[-2,-3]]],[],[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[78,[-2]]],[[37,[-3,-2]]],[],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[[[40,[-1]],-1],[[40,[-1]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[168,169],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-3,[],[],[[10,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[170,170],[171,171],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[170,170],172],[[-1,-2],172,[],[]],[[],[[173,[-1]]],[]],[[],171],[168],[168],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,171,5,91,116],[[77,[91]]],174],[168,91],[[170,170],22],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,170],[[77,[[78,[59]]]]],[]],[[[173,[-1]],170],[[77,[[78,[59]]]]],175],[[[176,[-1]],24],25,27],[[177,24],25],[[[173,[-1]],24],25,27],[[170,24],25],[[[178,[-1]],24],25,27],[[171,24],25],[[179,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[173,[-1]],170],[[77,[-1]]],[]],[[[173,[-1]],170],[[77,[-1]]],[]],[[[173,[-1]],117],[[77,[-1]]],[]],[[[173,[-1]],117],[[77,[-1]]],[]],[[170,-1],2,44],[[[173,[-1]],170],[],[]],[[[173,[-1]],117],[],[]],[[[173,[-1]],117],[],[]],[[[173,[-1]],170],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[46,[-1,45]]],[[46,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[47,[-1,45]]],[[47,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[[[48,[-1,45]]],[[48,[6,45]]],[]],[-1,[[2,[-2,-2]]],[],[]],[-1,[[2,[-2,-2]]],[],[]],[[[173,[-1]]],22,[]],[[-1,117],[[77,[180]]],[]],[[-1,117],[[77,[180]]],[]],[[-1,117],[[77,[180]]],[]],[[-1,117],[[77,[180]]],[]],[[-1,117],[[77,[180]]],[]],[[-1,117],[[77,[180]]],[]],[[-1,117],[[77,[180]]],[]],[[-1,117],[[77,[180]]],[]],[-1,117,[]],[[[173,[-1]]],117,[]],[-1,[[78,[181]]],[]],[[[176,[-1]]],[[78,[181]]],182],[-1,[[78,[181]]],[]],[[[176,[-1]]],[[78,[181]]],182],[[117,-1],[[176,[-1]]],182],[[],[[173,[-1]]],[]],0,[168,[[78,[59]]]],[[170,170],[[77,[172]]]],[-1,[[78,[59]]],[]],0,[[[173,[-1]],-1],170,[]],[[-1,168],[[77,[91]]],[]],[[-1,[78,[181]],[12,[59]],168],[[77,[91]]],[]],[[-1,[78,[59]],5,116],[[77,[91]]],[]],[[[176,[-1]],[78,[181]],[12,[59]],168],[[77,[91]]],182],[[-1,168],[[77,[91]]],[]],[[177,[12,[59]],168],[[77,[91]]]],[[[173,[-1]],168],[[77,[91]]],175],[[179,[78,[181]],[12,[59]],168],[[77,[91]]]],[[-1,168],[[77,[91]]],[]],[168,59],0,[-1,-2,[],[]],[-1,-2,[],[]],[168,169],[[[78,[59]],71,5,[49,[59]]],[[78,[59]]]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,[[79,[-2]]],[],[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[-1,[[77,[-2]]],[],[]],[168,[[12,[59]]]],0,[[171,-1],[[78,[59]]],174],[168,5],0,0],"c":[],"p":[[3,"Frame",0],[15,"tuple"],[3,"Color",0],[15,"u8"],[15,"f32"],[8,"Any",1912],[3,"Graphics",0],[3,"Device",1913],[3,"Queue",1913],[8,"CastFrom",1914],[3,"UPx",1915],[3,"Rect",1916],[3,"RenderingGraphics",0],[3,"ClipGuard",0],[3,"TextureCollection",0],[3,"CollectedTexture",0],[4,"Origin",0],[8,"Clone",1917],[3,"SharedTexture",0],[3,"TextureRegion",0],[8,"Clipped",0],[15,"bool"],[8,"PartialEq",1918],[3,"Formatter",1919],[6,"Result",1919],[3,"PreparedGraphic",0],[8,"Debug",1919],[3,"Kludgine",0],[3,"Texture",0],[4,"AnyTexture",0],[4,"Family",1920],[3,"Lp",1915],[4,"Style",1920],[3,"FontSystem",1921],[3,"Weight",1920],[4,"TextureFormat",1922],[3,"Drawable",0],[8,"DrawableSource",0],[8,"Default",1923],[3,"Text",1483],[3,"Color",1924],[4,"DynamicImage",1925],[4,"FilterMode",1922],[8,"Hasher",1926],[3,"Global",1927],[3,"Box",1928],[3,"Arc",1929],[3,"Rc",1930],[3,"Size",1931],[3,"TextureUsages",1922],[3,"Vec",1932],[3,"MultisampleState",1922],[15,"slice"],[8,"Unit",1933],[15,"i32"],[8,"Div",1934],[8,"From",1935],[3,"Buffer",1936],[3,"Px",1915],[4,"TextOrigin",1483],[3,"PreparedText",1483],[3,"ImageDataLayout",1922],[3,"RenderPassDescriptor",1913],[8,"IntoSigned",1933],[8,"Copy",1937],[8,"ShaderScalable",0],[8,"ScreenUnit",1933],[8,"Zero",1933],[4,"LoadOp",1913],[3,"Angle",1938],[3,"Fraction",1939],[4,"FamilyOwned",1924],[8,"ScreenScale",1933],[3,"Attrs",1924],[4,"Width",1940],[3,"SubmissionIndex",1913],[4,"Option",1941],[3,"Point",1942],[4,"Result",1943],[3,"TypeId",1912],[3,"Window",612],[3,"DeviceId",1944],[6,"AxisId",1944],[15,"f64"],[3,"WindowHandle",612],[4,"CompositeAlphaMode",1922],[3,"PhysicalPosition",1945],[8,"Send",1937],[3,"WindowAttributes",612],[3,"PathBuf",1946],[3,"Duration",1947],[4,"Ime",1944],[4,"PhysicalKey",1948],[8,"Into",1935],[3,"KeyEvent",1944],[3,"Limits",1922],[3,"Modifiers",1944],[4,"MouseButton",1944],[4,"ElementState",1944],[4,"MouseScrollDelta",1944],[4,"TouchPhase",1944],[3,"NonZeroU32",1949],[4,"PowerPreference",1922],[15,"char"],[3,"Instant",1950],[4,"EventLoopError",1951],[8,"FnMut",1952],[8,"UnwindSafe",1953],[4,"ImePurpose",1954],[15,"str"],[4,"Theme",1954],[3,"String",1955],[3,"Touch",1944],[15,"i64"],[3,"Window",1954],[3,"Renderer",758],[15,"usize"],[3,"Drawing",758],[3,"MeasuredText",1483],[3,"Shape",817],[8,"TextureSource",0],[8,"ShapeSource",0],[3,"PathBuilder",817],[8,"FloatConversion",1933],[3,"Endpoint",817],[3,"Path",817],[3,"CornerRadii",817],[8,"PartialOrd",1918],[4,"LineCap",817],[4,"LineJoin",817],[4,"PathEvent",817],[3,"StrokeOptions",817],[4,"FloatOrInt",1933],[6,"ControlPoint",817],[8,"DefaultStrokeWidth",817],[8,"PixelScaling",1933],[8,"Neg",1934],[8,"Add",1934],[8,"Ord",1918],[8,"Sub",1934],[8,"Mul",1934],[8,"TryFrom",1935],[3,"Error",1919],[15,"never"],[8,"IntoIterator",1956],[3,"SpriteMap",1135],[3,"SpriteSheet",1135],[8,"Eq",1918],[8,"Hash",1926],[8,"Fn",1952],[3,"SpriteAnimations",1135],[3,"SpriteAnimation",1135],[8,"ToString",1955],[4,"AnimationMode",1135],[4,"FrameParseError",1135],[4,"FrameTagError",1135],[3,"InvalidSpriteTag",1135],[3,"Sprite",1135],[3,"SpriteFrame",1135],[4,"SpriteSource",1135],[3,"HashMap",1957],[4,"SpriteParseError",1135],[4,"ImageError",1958],[3,"Error",1959],[8,"Sync",1937],[3,"MeasuredGlyph",1483],[3,"GlyphInfo",1483],[3,"LayerContext",1658],[3,"TileOffset",1658],[3,"ObjectId",1658],[4,"TileMapFocus",1658],[4,"Ordering",1918],[3,"ObjectLayer",1658],[8,"Layers",1658],[8,"Object",1658],[3,"TileArray",1658],[4,"TileKind",1658],[3,"ObjectInfo",1658],[3,"DebugGrid",1658],[8,"Layer",1658],[15,"isize"],[8,"TileList",1658],[8,"DrawableExt",0],[8,"WindowBehavior",612],[8,"Message",612],[13,"Begin",1123],[13,"End",1123],[13,"Quadratic",1123],[13,"Cubic",1123],[13,"Line",1123],[8,"SpriteCollection",1135],[13,"FrameTag",1479],[13,"Frame",1479],[8,"TileSource",1658],[13,"Object",1910]],"a":{"app_id":[621],"class":[621],"class_name":[621]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
